import asyncio
import logging
from mailbox import Message

from aiogram import Bot, Dispatcher,F
from aiogram import types
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.handlers import callback_query
from aiogram.methods import DeleteWebhook
from aiogram.types import FSInputFile, InlineKeyboardButton,InlineKeyboardMarkup
from mistralai import Mistral
logging.basicConfig(level=logging.INFO)
from db.models import async_main
import db.requests as rq
ai_token='fvBIVxM6OG3TYZe3WlLCT1jusvjlNVGk'
bot=Bot(token='7507350582:AAGiTlrWCna_FRONZykDuM3BbbGy7uLCQkE')
model='mistral-small-latest'
client=Mistral(ai_token)
dp=Dispatcher()


@dp.message(CommandStart())
async def h(message: types.Message):
    hello = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–î–∞', callback_data='start_begin')],
        [InlineKeyboardButton(text='–ù–µ—Ç', callback_data='mm4')],
    ])
    await message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: tg_id –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', reply_markup=hello)

class Form(StatesGroup):
    waiting_for_input = State()

@dp.callback_query(F.data == 'start_begin')
async def hello(callback_query: types.CallbackQuery):
    await async_main()
    await rq.set_user(callback_query.from_user.id, callback_query.from_user.first_name)
    await callback_query.message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {callback_query.from_user.first_name}.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏üí•')
    await callback_query.message.answer(
        f'{callback_query.from_user.first_name}, –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∫—Ä—É–ø–Ω–æ–π IT –∫–æ–º–ø–∞–Ω–∏–∏, –í–∞–º –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –í–∞—à–µ–≥–æ –Ω–∞—á–∞–ª—å–Ω–∏–∫–∞üëá')
    v = FSInputFile('foo.mp4')
    await callback_query.message.answer_video(v)
    await callback_query.message.answer(
        '–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–∞–ø: ',
        reply_markup=mainmenu)


mainmenu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–≠—Ç–∞–ø 1. –û—Å–Ω–æ–≤—ã —Å—Ç–µ–≥–∞–Ω–æ–≥—Ä–∞—Ñ–∏–∏', callback_data='mm1')],
    [InlineKeyboardButton(text='–≠—Ç–∞–ø 2. –ú–µ—Ç–æ–¥—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏', callback_data='mm2')],
    [InlineKeyboardButton(text='–≠—Ç–∞–ø 3. –ú–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', callback_data='mm3')],
    [InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É', callback_data='mm4')],
])

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.callback_query(F.data == 'mm1')
async def mm1(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        '–í –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å —Å—Ç–æ–∏—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —É—Ç–µ—á–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã–ª–æ –≤—ã—è–≤–ª–µ–Ω–æ 3 —Å–ª—É—á–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ—Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
        reply_markup=bb1)

@dp.callback_query(F.data == 'mm2')
async def mm1(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        '–£—Ç–µ—á–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –º–µ—Ç–æ–¥–æ–≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ, –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏–º–µ–Ω—è–ª–∏—Å—å –≤ –∫–∞–∂–¥–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–ª—É—á–∞–µ',
        reply_markup=bb2)

@dp.callback_query(F.data == 'mm3')
async def mm1(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        '–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–±–ª–µ–º –±—ã–ª–∏ –≤—ã—è–≤–ª–µ–Ω—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.',
        reply_markup=bb3)

@dp.callback_query(F.data == 'mm4')
async def mm1(callback_query: types.CallbackQuery):
    r= await rq.give_res(callback_query.from_user.id)
    await callback_query.message.answer(f'–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç {r} –±–∞–ª–ª–æ–≤!')







#–í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –Ω–∞ 1 —ç—Ç–∞–ø–µ
bb1 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ê–Ω–Ω–∞, –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–¥–µ–ª–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏', callback_data='b1')],
    [InlineKeyboardButton(text='–ò–≤–∞–Ω, —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', callback_data='b2')],
    [InlineKeyboardButton(text='–Æ–ª–∏—è, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', callback_data='b3')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])

@dp.callback_query(F.data == 'b1')
async def b1(callback_query: types.CallbackQuery):
    f4 = FSInputFile('–ê–Ω–Ω–∞.png')
    await callback_query.message.answer_photo(f4)
    f1 = FSInputFile('–∞–Ω–Ω–∞ –≥—Å.ogg')
    await callback_query.message.answer_audio(f1)
    f2 = FSInputFile('–Ø–ø–æ–Ω–∏—è.bmp')
    await callback_query.message.answer_photo(f2, '–í –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å–∫—Ä—ã—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–π–¥–∏—Ç–µ –µ–≥–æ', reply_markup=a)

a = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='qwerty', callback_data='c1'),
     InlineKeyboardButton(text='password', callback_data='c2'),
     InlineKeyboardButton(text='ask', callback_data='c3')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='back')]
])


@dp.callback_query(F.data == 'c1')
async def c1(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞! –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã.')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É:',
        reply_markup=mainmenu)


@dp.callback_query(F.data == 'c2')
async def c2(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ, –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å!')
    await rq.set_ball(callback_query.from_user.id, 10, 0, 0)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É:',
        reply_markup=mainmenu
    )


@dp.callback_query(F.data == 'c3')
async def c3(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É:',
        reply_markup=mainmenu)

@dp.callback_query(F.data == 'back')
async def c3(callback_query: types.CallbackQuery):
    #await callback_query.message.delete()
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —ç—Ç–∞–ø',reply_markup=mainmenu)







@dp.callback_query(F.data == 'b2')
async def b2(callback_query: types.CallbackQuery):
    f6 = FSInputFile('–ò–≤–∞–Ω.png')
    await callback_query.message.answer_photo(f6)
    ff1 = FSInputFile('–≥—Å –∏–≤–∞–Ω.ogg')
    await callback_query.message.answer_audio(ff1)
    await callback_query.message.answer('–§–∞–π–ª –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ')
    await callback_query.message.answer("–°—Å—ã–ª–∫–∞: https://clck.ru/3GQLYc")
    await callback_query.message.answer('–ö–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ?', reply_markup=a1)

a1 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='$t@pler', callback_data='c—Å1'),
     InlineKeyboardButton(text='Shrimp', callback_data='c—Å2'),
     InlineKeyboardButton(text='P@$$word ', callback_data='c—Å3')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='back')]
])

@dp.callback_query(F.data == 'c—Å1')
async def c—Å1(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞! –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã.')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É:',
        reply_markup=mainmenu)

@dp.callback_query(F.data == 'c—Å2')
async def c—Å2(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ, –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å!')
    await callback_query.message.answer('–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10 –±–∞–ª–ª–æ–≤')
    await rq.set_ball(callback_query.from_user.id, 10, 0, 0)
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É: ',
        reply_markup=mainmenu)

@dp.callback_query(F.data == 'c—Å3')
async def c—Å3(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É: ',
        reply_markup=mainmenu)








@dp.callback_query(F.data == 'b3')
async def b3(callback_query: types.CallbackQuery):
    f5 = FSInputFile('–Æ–ª–∏—è.png')
    await callback_query.message.answer_photo(f5)
    ff2 = FSInputFile('–≥—Å —é–ª–∏—è.ogg')
    await callback_query.message.answer_audio(ff2)
    await callback_query.message.answer('–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å–∞–π—Ç–∞')
    await callback_query.message.answer("–°—Å—ã–ª–∫–∞: https://clck.ru/3GQMeC")
    await callback_query.message.answer('–ö–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ?', reply_markup=a2)
a2 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ö–∏—Ç', callback_data='c—Å—Å1'),
     InlineKeyboardButton(text='–ö–æ–º', callback_data='c—Å—Å2'),
     InlineKeyboardButton(text='–ö–æ—Ç', callback_data='c—Å—Å3')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data='back')]
])

@dp.callback_query(F.data == 'c—Å—Å1')
async def c—Å—Å1(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É: ',
        reply_markup=mainmenu)

@dp.callback_query(F.data == 'c—Å—Å2')
async def c—Å—Å2(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ, –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å!')
    await rq.set_ball(callback_query.from_user.id, 10, 0, 0)
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É: ',
        reply_markup=mainmenu)

@dp.callback_query(F.data == 'c—Å—Å3')
async def c—Å—Å3(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞!')
    await callback_query.message.answer(
        '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É: ',
        reply_markup=mainmenu)







#–í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –Ω–∞ 2 —ç—Ç–∞–ø–µ
bb2 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–∞—Ä—å—è, –±—É—Ö–≥–∞–ª—Ç–µ—Ä', callback_data='b21')],
    [InlineKeyboardButton(text='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –º–µ–Ω–µ–¥–∂–µ—Ä-—Å—Ç–∞–∂–µ—Ä', callback_data='b22')],
    [InlineKeyboardButton(text='–ê–Ω–∞—Å—Ç–∞—Å–∏—è, —Å–µ–∫—Ä–µ—Ç–∞—Ä—å', callback_data='b23')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]

])

@dp.callback_query(F.data == 'b21')
async def b21(callback_query: types.CallbackQuery):
    f4 = FSInputFile('–î–∞—Ä—å—è.jpg')
    await callback_query.message.answer_photo(f4)
    await callback_query.message.answer('–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–æ–π —ç—Ç–æ –º–µ—Ç–æ–¥ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏?',reply_markup=dasha_b21)

dasha_b21=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–§–∏—à–∏–Ω–≥', callback_data='fishing'),
     InlineKeyboardButton(text='–¢–∞–π–ø—Å–∫–≤–æ—Ç—Ç–∏–Ω–≥', callback_data='taip'),
     InlineKeyboardButton(text='–ö—Ä—ç–∫–∏–Ω–≥', callback_data='kraking')],
     [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])
@dp.callback_query(F.data == 'fishing')
async def fishing(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',reply_markup=bb2)
    await rq.set_ball(callback_query.from_user.id, 0, 10, 0)
@dp.callback_query(F.data == 'taip')
async def taip(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', reply_markup=bb2)
@dp.callback_query(F.data == 'kraking')
async def kraking(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', reply_markup=bb2)

@dp.callback_query(F.data == 'b22')
async def b21(callback_query: types.CallbackQuery):
    f4 = FSInputFile('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä.jpg')
    await callback_query.message.answer_photo(f4)
    await callback_query.message.answer('–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–æ–π —ç—Ç–æ –º–µ—Ç–æ–¥ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏?',reply_markup=aleksandr_b22)

aleksandr_b22=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–§–∏—à–∏–Ω–≥', callback_data='fishing'),
     InlineKeyboardButton(text='–ö—Ä–∞–∂–∞ –ª–∏—á–Ω–æ—Å—Ç–∏', callback_data='krazha'),
     InlineKeyboardButton(text='–ö—Ä—ç–∫–∏–Ω–≥', callback_data='kraking')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])
@dp.callback_query(F.data == 'fishing')
async def fishing(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', reply_markup=bb2)
@dp.callback_query(F.data == 'krazha')
async def taip(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await rq.set_ball(callback_query.from_user.id, 0, 10, 0)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', reply_markup=bb2)
@dp.callback_query(F.data == 'kraking')
async def kraking(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', reply_markup=bb2)


@dp.callback_query(F.data == 'b23')
async def b21(callback_query: types.CallbackQuery):
    f4 = FSInputFile('–ê–Ω–∞—Å—Ç–∞—Å–∏—è.jpg')
    await callback_query.message.answer_photo(f4)
    await callback_query.message.answer('–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–æ–π —ç—Ç–æ –º–µ—Ç–æ–¥ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏?',reply_markup=anastasia_b23)

anastasia_b23=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–§–∏—à–∏–Ω–≥', callback_data='fish'),
     InlineKeyboardButton(text='–¢–∞–π–ø—Å–∫–≤–æ—Ç—Ç–∏–Ω–≥', callback_data='taips'),
     InlineKeyboardButton(text='–ö—Ä—ç–∫–∏–Ω–≥', callback_data='krakin')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])
@dp.callback_query(F.data == 'fish')
async def fishing(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É',reply_markup=mainmenu)
@dp.callback_query(F.data == 'taips')
async def taip(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await rq.set_ball(callback_query.from_user.id, 0, 10, 0)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É',reply_markup=mainmenu)
@dp.callback_query(F.data == 'krakin')
async def kraking(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É',reply_markup=mainmenu)










#–í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –Ω–∞ 3 —ç—Ç–∞–ø–µ
bb3 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–æ–ª–∏—Ç–∏–∫–∞ —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞', callback_data='b31')],
    [InlineKeyboardButton(text='–°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏', callback_data='b32')],
    [InlineKeyboardButton(text='–ó–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', callback_data='b33')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])


@dp.callback_query(F.data == 'b31')
async def pol(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —É –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—ã–ª —Å–≤–æ–π –Ω–∞–±–æ—Ä –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º. –ü—Ä–∏ —ç—Ç–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –¥—Ä—É–≥–æ–≥–æ –æ—Ç–¥–µ–ª–∞.')
    await  callback_query.message.answer('–ö–∞–∫–∞—è —ç—Ç–æ –º–æ–¥–µ–ª—å —Ä–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞?',reply_markup=polb31)
polb31=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–∏—Å–∫—Ä–µ—Ü–∏–æ–Ω–Ω–∞—è',callback_data='disk'),
     InlineKeyboardButton(text='–†–æ–ª–µ–≤–∞—è',callback_data='rol'),
     InlineKeyboardButton(text='–ú–∞–Ω–¥–∞—Ç–Ω–∞—è',callback_data='mand')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])
@dp.callback_query(F.data == 'disk')
async def pol1(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer( '–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥',reply_markup=bb3)
@dp.callback_query(F.data == 'mand')
async def pol2(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=bb3)
@dp.callback_query(F.data == 'rol')
async def pol3(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await rq.set_ball(callback_query.from_user.id, 0, 0, 10)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=bb3)





@dp.callback_query(F.data == 'b32')
async def sist(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ü—Ä–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—Å–∫–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –±—ã–ª–æ —Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –∫–∞–∫–æ–π —Å–ø–æ—Å–æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è')
    await  callback_query.message.answer('–ö–∞–∫–∞—è —ç—Ç–æ —Å–ø–æ—Å–æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏?',reply_markup=sistb32)
sistb32=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–Ø –∑–Ω–∞—é',callback_data='know'),
     InlineKeyboardButton(text='–Ø –≤–ª–∞–¥–µ—é',callback_data='have'),
     InlineKeyboardButton(text='–Ø –µ—Å—Ç—å',callback_data='eat')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])

@dp.callback_query(F.data == 'know')
async def know(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=bb3)
@dp.callback_query(F.data == 'have')
async def have(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=bb3)
@dp.callback_query(F.data == 'eat')
async def eat(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await rq.set_ball(callback_query.from_user.id, 0, 0, 10)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥', reply_markup=bb3)















@dp.callback_query(F.data == 'b33')
async def pol3(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í –∫–æ–º–ø–∞–Ω–∏–∏ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (DLP-—Å–∏—Å—Ç–µ–º–∞), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —É–≥—Ä–æ–∑:\n1.–ü–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø–æ–±–æ—á–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º \n2.–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –∫ –∑–∞—â–∏—â–∞–µ–º–æ–π —Å–∏—Å—Ç–µ–º–µ –∏ –µ—ë —Ä–µ—Å—É—Ä—Å–∞–º\n3.–ü–µ—Ä–µ–¥–∞—á–∏ –∏–ª–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ª–µ–≥–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∑–∞—â–∏—â–∞–µ–º–æ–π —Å–∏—Å—Ç–µ–º—ã')
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç',reply_markup=pol3b33)

pol3b33=InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='1',callback_data='one'),
     InlineKeyboardButton(text='2',callback_data='two'),
     InlineKeyboardButton(text='3',callback_data='three')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back')]
])

@dp.callback_query(F.data == 'one')
async def two(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('THE END\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∏—Ç –Æ–ª–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç –æ—Ü–µ–Ω–∫—É –≤ –∂—É—Ä–Ω–∞–ª')

@dp.callback_query(F.data == 'two')
async def two(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–ù–µ–≤–µ—Ä–Ω–æ')
    await callback_query.message.answer('THE END\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∏—Ç –Æ–ª–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç –æ—Ü–µ–Ω–∫—É –≤ –∂—É—Ä–Ω–∞–ª')
@dp.callback_query(F.data == 'three')
async def three(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–í–µ—Ä–Ω–æ')
    await rq.set_ball(callback_query.from_user.id, 0, 0, 10)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π tg_id
    await callback_query.message.answer('THE END\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ü–µ–Ω–∏—Ç –Æ–ª–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç –æ—Ü–µ–Ω–∫—É –≤ –∂—É—Ä–Ω–∞–ª')


@dp.message()
async def message_handler(msg:Message):
    chat_response = client.chat.complete(
        model=model,
        messages=[
            {
                'role': 'system',
                'content': '',
            },
            {
                'role': 'user',
                'content': msg.text,
            },
        ]
    )


    await bot.send_message(msg.chat.id,chat_response.choices[0].message.content,parse_mode='Markdown')





async def main():
    await bot(DeleteWebhook(drop_pending_updates=True))
    await dp.start_polling(bot)

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('EXIT')